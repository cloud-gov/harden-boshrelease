#!/bin/bash
set -e

echo "---> Starting hardening process"

# cheap hack - nessus for some reason assumes it knows the absolute path
# check first to make sure grep doesn't exist
[[ -e /usr/bin/grep ]] || ln -s /bin/grep /usr/bin/grep

cd /var/vcap/jobs/harden/files

###
# /etc/modprobe.d Safe Defaults
# See https://github.com/18F/ubuntu/blob/master/hardening.md
###

cp etc/modprobe.d/18Fhardened.conf /etc/modprobe.d/18Fhardened.conf
chmod 0644 /etc/modprobe.d/18Fhardened.conf
chown root:root /etc/modprobe.d/18Fhardened.conf

###
# grub changes (workaround while we work with Nessus to fix scans)
###

cp etc/default/grub /etc/default/grub
chmod 0600 /etc/default/grub

###
# Redirect protections
# See https://github.com/18F/ubuntu/blob/master/hardening.md#redirect-protections
###

cp etc/sysctl.conf /etc/sysctl.conf
chmod 0644 /etc/sysctl.conf
chown root:root /etc/sysctl.conf

IPV4_SETTINGS[0]="net.ipv4.conf.default.rp_filter=1"
IPV4_SETTINGS[1]="net.ipv4.conf.all.rp_filter=1"
IPV4_SETTINGS[2]="net.ipv4.conf.all.accept_redirects=0"
IPV4_SETTINGS[3]="net.ipv4.conf.default.accept_redirects=0"
IPV4_SETTINGS[4]="net.ipv4.conf.all.secure_redirects=0"
IPV4_SETTINGS[5]="net.ipv4.conf.default.secure_redirects=0"
IPV4_SETTINGS[6]="net.ipv4.conf.all.send_redirects=0"
IPV4_SETTINGS[7]="net.ipv4.conf.default.send_redirects=0"
IPV4_SETTINGS[8]="net.ipv4.conf.all.accept_source_route=0"
IPV4_SETTINGS[9]="net.ipv4.conf.default.accept_source_route=0"
IPV4_SETTINGS[10]="net.ipv4.conf.all.log_martians=1"
IPV4_SETTINGS[11]="net.ipv4.conf.default.log_martians=1"
IPV4_SETTINGS[12]="net.ipv4.icmp_echo_ignore_broadcasts=1"
IPV4_SETTINGS[13]="net.ipv4.icmp_ignore_bogus_error_responses=1"
IPV4_SETTINGS[14]="net.ipv4.tcp_syncookies=1"
IPV4_SETTINGS[15]="net.ipv4.route.flush=1"

IPV6_SETTINGS[0]="net.ipv6.conf.all.accept_redirects=0"
IPV6_SETTINGS[1]="net.ipv6.conf.all.accept_source_route=0"
IPV6_SETTINGS[2]="net.ipv6.conf.default.accept_source_route=0"
IPV6_SETTINGS[3]="net.ipv6.conf.all.accept_ra=0"
IPV6_SETTINGS[4]="net.ipv6.conf.default.accept_ra=0"
IPV6_SETTINGS[5]="net.ipv6.conf.all.accept_redirects=0"
IPV6_SETTINGS[6]="net.ipv6.conf.default.accept_redirects=0"
IPV6_SETTINGS[6]="net.ipv6.route.flush=1"


if [ ! -f /etc/sysctl.conf.orig ]; then
    cp /etc/sysctl.conf /etc/sysctl.conf.orig
    # ensure there's a \n at the end of the file
    echo "" >> /etc/sysctl.conf.orig
fi

cp /etc/sysctl.conf.orig /etc/sysctl.conf

for setting in "${IPV4_SETTINGS[@]}"; do
  /sbin/sysctl -w $setting
  echo "${setting}" >> /etc/sysctl.conf
done

# only harden ipv6 settings, if ipv6 is enabled
if [ -d /proc/sys/net/ipv6 ]; then
    for setting in "${IPV6_SETTINGS[@]}"; do
        /sbin/sysctl -w $setting
        echo "${setting}" >> /etc/sysctl.conf
    done
fi

# reload all sysctl settings
# error handling is disabled, ipv6 settings will auto apply if enabled
set +e
/sbin/sysctl -p /etc/sysctl.conf
set -e


###
# Audit Strategy!
# See https://github.com/18F/ubuntu/blob/master/hardening.md#audit-strategy
###

mkdir -p /etc/audit
cp etc/audit/audit.rules /etc/audit/audit.rules
chmod -R 0640 /etc/audit
chown -R root:root /etc/audit


###
# System Access, Authentication and Authorization
# See https://github.com/18F/ubuntu/blob/master/hardening.md#system-access-authentication-and-authorization
###

rm -f /etc/at.deny

CRON_FILES[0]="/etc/cron.allow"
CRON_FILES[1]="/etc/at.allow"
CRON_FILES[2]="/etc/crontab"
CRON_FILES[3]="/etc/cron.hourly"
CRON_FILES[4]="/etc/cron.daily"
CRON_FILES[5]="/etc/cron.weekly"
CRON_FILES[6]="/etc/cron.monthly"
CRON_FILES[7]="/etc/cron.d"

for file in "${CRON_FILES[@]}"; do
  chmod 0600 $file
  chown root:root $file
done


###
# Password Policy
# See https://github.com/18F/ubuntu/blob/master/hardening.md#password-policy
###

apt update
apt-get upgrade -y libpam-pwquality

cp etc/pam.d/common-password /etc/pam.d/common-password
cp etc/pam.d/common-auth /etc/pam.d/common-auth
cp etc/pam.d/login /etc/pam.d/login
cp etc/pam.d/su /etc/pam.d/su
cp etc/login.defs /etc/login.defs
cp etc/security/pwquality.conf /etc/security/pwquality.conf
cp etc/security/faillock.conf /etc/security/faillock.conf

chown root:root /etc/pam.d/common-password /etc/pam.d/common-auth /etc/pam.d/login /etc/login.defs /etc/security/pwquality.conf /etc/security/faillock.conf
chmod 0644 /etc/pam.d/common-password /etc/pam.d/common-auth /etc/pam.d/login /etc/login.defs /etc/security/pwquality.conf /etc/security/faillock.conf

###
# SSH Settings
# See https://github.com/18F/ubuntu/blob/master/hardening.md#ssh-settings
###

cp etc/ssh/sshd_config /etc/ssh/sshd_config
chmod 0600 /etc/ssh/sshd_config

###
# Set warning banner for login services
###

cp etc/issue /etc/issue
cp etc/issue /etc/issue.net
cp etc/update-motd.d/00-header /etc/update-motd.d/00-header
touch /etc/motd

ISSUE_FILES[0]="/etc/issue"
ISSUE_FILES[1]="/etc/issue.net"
ISSUE_FILES[2]="/etc/motd"
ISSUE_FILES[3]="/etc/update-motd.d/00-header"

for file in "${ISSUE_FILES[@]}"; do
  chmod 0644 $file
  chown root:root $file
done

###
# Restrict Core Dumps
###

cp etc/security/limits.conf /etc/security/limits.conf

###
# Change permissions on home directory
###

chmod 0750 /home/vcap
chmod 0750 /var/mail


###
# Ensure syslog emits at least one entry each minute
###
sed -i 's/^#\($ModLoad immark\)/\1/' /etc/rsyslog.conf
sed -i 's/^\($ModLoad imuxsock\)/#\1/' /etc/rsyslog.conf
sed -i 's/^\($SystemLogSocketName\)/#\1/' /etc/rsyslog.conf
sed -i 's/^\($RepeatedMsgReduction on\)/#\1/' /etc/rsyslog.conf

cat << 'EOF' > /etc/rsyslog.d/00-heartbeat.conf
$MarkMessagePeriod 60
$ActionWriteAllMarkmessages on

module(load="imuxsock" SysSock.IgnoreOwnMessages="off" SysSock.RateLimit.Interval="0" SysSock.Name="/run/systemd/journal/syslog")
EOF

service rsyslog restart

###
# Ensure rpcbind does not run at start (Nessus check 6.7)
###
set +e
sed -i 's/^\(start.*\)/\#\1/' /etc/init/rpcbind-boot.conf
service rpcbind stop || true
set -e

###
# remove rsync
###

sudo apt-get -y remove rsync
sudo apt -y purge rsync

###
# remove chrony
###

# sudo apt -y purge chrony  # Needed for bosh-agent to configure ntp, chronyc is hardcoded into the agent

###
# Limit logfile access
###
chmod -R 0600 /var/log/*

###
# drop in profile files to pick up umask
###
cp etc/bash.bashrc /etc/bash.bashrc
cp etc/profile /etc/profile

chown root: /etc/bash.bashrc /etc/profile
chmod 0644 /etc/bash.bashrc /etc/profile

###
# shadow
###
chown root:shadow /etc/shadow /etc/gshadow

###
# disable inactive users after 30 days
###
useradd -D -f 30

####
# enforce password settings
###

chage --mindays 1 root
chage --maxdays 90 root
chage --maxdays 90 vcap
chage --inactive 30 root
chage --inactive 30 vcap

###
# set secure consoles
###

cp etc/securetty /etc/securetty
chown root: /etc/securetty
chmod 0644 /etc/securetty

###
# clean up after systemd-timesyncd
###

set +e
rm /var/lib/private/systemd/timesync/clock
rmdir /var/lib/private/systemd/timesync
set -e

###
# install tcpwrappers
###
apt-get upgrade -y tcpd

###
# Ensure bootloader permissions are not overridden
###
# sed -ri 's/chmods+[0-7][0-7][0-7]s+${grub_cfg}.new/chmod 400 ${grub_cfg}.new/' /usr/sbin/grub-mkconfig
# sed -ri 's/ && ! grep '^password' ${grub_cfg}.new >/dev/null//' /usr/sbin/grub-mkconfig

###
# Set grub permissions
###
chown root:root /boot/grub/grub.cfg
chmod u-wx,go-rwx /boot/grub/grub.cfg

###
# Stop and mask timesyncd
###
#systemctl stop systemd-timesyncd.service
#systemctl mask systemd-timesyncd.service

###
# Disable ipv6 forwarding
###
#grep -Els '^s*net.ipv6.conf.all.forwardings*=s*1' /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri 's/^s*(net.ipv6.conf.all.forwardings*)(=)(s*S+b).*$/# *REMOVED* 1/' $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1

###
# Set permissions for log files
###
find /var/log -type f -exec chmod g-wx,o-rwx '{}' + -o -type d -exec chmod g-w,o-rwx '{}' +

###
# Update sudoers file
###
cat << 'EOF' >> /etc/sudoers
Defaults  use_pty
Defaults  logfile=/var/log/sudo.log
EOF

# add empty group specified for use of su command.
if [ ! "$(getent group sugroup)" ]; then
  groupadd sugroup
fi


echo "---> Finished hardening process"
if [[ -f /var/vcap/jobs/aide/bin/update-aide-db ]]; then
  echo "---> Updating AIDE db"
  set +e # aide returns non-zero on db changes
  /var/vcap/jobs/aide/bin/update-aide-db
  set -e
fi
